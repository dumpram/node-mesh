<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\nrf-mesh-api.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\nrf-mesh-api.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Mon Jan 16 00:30:50 2017
<BR><P>
<H3>Maximum Stack Usage =        408 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; set_node_data &rArr; ESB_Init &rArr; dbg_print &rArr; RingBufWrite &rArr; RingBufWriteOne &rArr; UpdateIndexAtomic
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c]">ADC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[14]">CCM_AAR_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[13]">ECB_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[b]">GPIOTE_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[18]">LPCOMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[6]">POWER_CLOCK_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[17]">QDEC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[7]">RADIO_IRQHandler</a> from nrf_esb.o(i.RADIO_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[12]">RNG_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[10]">RTC0_IRQHandler</a> from main_mesh_v2.o(i.RTC0_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[16]">RTC1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[9]">SPI0_TWI0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[a]">SPI1_TWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[19]">SWI0_IRQHandler</a> from nrf_esb.o(i.SWI0_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1a]">SWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1b]">SWI2_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1c]">SWI3_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1d]">SWI4_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1e]">SWI5_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[20]">SystemInit</a> from system_nrf51.o(i.SystemInit) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[11]">TEMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[d]">TIMER0_IRQHandler</a> from main_mesh_v2.o(i.TIMER0_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[e]">TIMER1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[f]">TIMER2_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[8]">UART0_IRQHandler</a> from main_mesh_v2.o(i.UART0_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[15]">WDT_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[21]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[22]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[22]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[1f]">main</a> from main_mesh_v2.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[25]">nrf_esb_tx_event_handler</a> from radio-platform.o(i.nrf_esb_tx_event_handler) referenced from radio-platform.o(i.set_node_data)
 <LI><a href="#[24]">on_radio_disabled_tx</a> from nrf_esb.o(i.on_radio_disabled_tx) referenced from nrf_esb.o(i.on_radio_disabled_tx_wait_for_ack)
 <LI><a href="#[24]">on_radio_disabled_tx</a> from nrf_esb.o(i.on_radio_disabled_tx) referenced from nrf_esb.o(i.start_tx_transaction)
 <LI><a href="#[26]">on_radio_disabled_tx_noack</a> from nrf_esb.o(i.on_radio_disabled_tx_noack) referenced from nrf_esb.o(i.start_tx_transaction)
 <LI><a href="#[23]">on_radio_disabled_tx_wait_for_ack</a> from nrf_esb.o(i.on_radio_disabled_tx_wait_for_ack) referenced from nrf_esb.o(i.on_radio_disabled_tx)
 <LI><a href="#[28]">update_rf_payload_format_esb</a> from nrf_esb.o(i.update_rf_payload_format_esb) referenced from nrf_esb.o(i.update_radio_parameters)
 <LI><a href="#[27]">update_rf_payload_format_esb_dpl</a> from nrf_esb.o(i.update_rf_payload_format_esb_dpl) referenced from nrf_esb.o(i.update_radio_parameters)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[7d]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[29]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7e]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[7f]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[80]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[81]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[82]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>LPCOMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>RTC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SPI0_TWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SPI1_TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SWI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SWI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SWI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SWI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_tx_transaction
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_fifo_push_rfbuf
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_write_payload
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_set_base_address_0
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_read_rx_payload
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_data
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_init
</UL>

<P><STRONG><a name="[84]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_disable
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_disable
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[74]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_tx_event_handler
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[88]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[89]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[8a]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[8b]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[8c]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[33]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[3c]"></a>ESB_Init</STRONG> (Thumb, 374 bytes, Stack size 56 bytes, radio-platform.o(i.ESB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = ESB_Init &rArr; dbg_print &rArr; RingBufWrite &rArr; RingBufWriteOne &rArr; UpdateIndexAtomic
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_update_prefix
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_set_rf_channel
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_set_base_address_0
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_enable_pipes
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_print
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_data
</UL>

<P><STRONG><a name="[7]"></a>RADIO_IRQHandler</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, nrf_esb.o(i.RADIO_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RADIO_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC0_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, main_mesh_v2.o(i.RTC0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>RTC_Init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main_mesh_v2.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_Init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>RingBufEmpty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ringbuf.o(i.RingBufEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[48]"></a>RingBufFree</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ringbuf.o(i.RingBufFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RingBufFree &rArr; RingBufUsed
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBufUsed
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBufWrite
</UL>

<P><STRONG><a name="[62]"></a>RingBufInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ringbuf.o(i.RingBufInit))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>RingBufReadOne</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ringbuf.o(i.RingBufReadOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RingBufReadOne &rArr; UpdateIndexAtomic
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndexAtomic
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_print
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[49]"></a>RingBufUsed</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ringbuf.o(i.RingBufUsed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RingBufUsed
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBufFree
</UL>

<P><STRONG><a name="[4c]"></a>RingBufWrite</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, ringbuf.o(i.RingBufWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RingBufWrite &rArr; RingBufWriteOne &rArr; UpdateIndexAtomic
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBufWriteOne
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBufFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_print
</UL>

<P><STRONG><a name="[4d]"></a>RingBufWriteOne</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ringbuf.o(i.RingBufWriteOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RingBufWriteOne &rArr; UpdateIndexAtomic
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndexAtomic
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBufWrite
</UL>

<P><STRONG><a name="[19]"></a>SWI0_IRQHandler</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, nrf_esb.o(i.SWI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SWI0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SystemInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, system_nrf51.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_peripheral_domain_setup_needed
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_manual_peripheral_setup_needed
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_disabled_in_debug_needed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main_mesh_v2.o(i.TIMER0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>Timer0_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, main_mesh_v2.o(i.Timer0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Timer0_Init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8]"></a>UART0_IRQHandler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, main_mesh_v2.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART0_IRQHandler &rArr; RingBufReadOne &rArr; UpdateIndexAtomic
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBufReadOne
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBufEmpty
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>UART_Init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, main_mesh_v2.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_Init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[8d]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[67]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[8f]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[58]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[90]"></a>__1vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[91]"></a>__2vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[92]"></a>__c89vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[60]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_print
</UL>

<P><STRONG><a name="[3b]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[93]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[94]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[95]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[69]"></a>clock_monotonic_reset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, radio-platform.o(i.clock_monotonic_reset))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>clocks_start</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, main_mesh_v2.o(i.clocks_start))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>dbg_print</STRONG> (Thumb, 78 bytes, Stack size 160 bytes, main_mesh_v2.o(i.dbg_print))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = dbg_print &rArr; RingBufWrite &rArr; RingBufWriteOne &rArr; UpdateIndexAtomic
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBufWrite
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBufReadOne
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_tx_event_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESB_Init
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>get_my_packet_data</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, radio-platform.o(i.get_my_packet_data))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>get_nrf_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radio-platform.o(i.get_nrf_id))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_data
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 186 bytes, Stack size 112 bytes, main_mesh_v2.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = main &rArr; set_node_data &rArr; ESB_Init &rArr; dbg_print &rArr; RingBufWrite &rArr; RingBufWriteOne &rArr; UpdateIndexAtomic
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_until_next_interval
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_data
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_nrf_id
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_my_packet_data
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_monotonic_reset
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBufInit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_print
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clocks_start
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIC_TOC_timer_set
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[6a]"></a>nrf_esb_disable</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, nrf_esb.o(i.nrf_esb_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_esb_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_fifos
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_init
</UL>

<P><STRONG><a name="[3f]"></a>nrf_esb_enable_pipes</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nrf_esb.o(i.nrf_esb_enable_pipes))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESB_Init
</UL>

<P><STRONG><a name="[6d]"></a>nrf_esb_flush_tx</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, nrf_esb.o(i.nrf_esb_flush_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_esb_flush_tx
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_tx_event_handler
</UL>

<P><STRONG><a name="[3e]"></a>nrf_esb_init</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, nrf_esb.o(i.nrf_esb_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_esb_init &rArr; update_radio_parameters
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_radio_parameters
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_fifos
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_disable
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESB_Init
</UL>

<P><STRONG><a name="[71]"></a>nrf_esb_read_rx_payload</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, nrf_esb.o(i.nrf_esb_read_rx_payload))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_esb_read_rx_payload
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_tx_event_handler
</UL>

<P><STRONG><a name="[40]"></a>nrf_esb_set_base_address_0</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, nrf_esb.o(i.nrf_esb_set_base_address_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nrf_esb_set_base_address_0 &rArr; update_radio_addresses &rArr; addr_conv
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_radio_addresses
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESB_Init
</UL>

<P><STRONG><a name="[42]"></a>nrf_esb_set_rf_channel</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nrf_esb.o(i.nrf_esb_set_rf_channel))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESB_Init
</UL>

<P><STRONG><a name="[25]"></a>nrf_esb_tx_event_handler</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, radio-platform.o(i.nrf_esb_tx_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = nrf_esb_tx_event_handler &rArr; dbg_print &rArr; RingBufWrite &rArr; RingBufWriteOne &rArr; UpdateIndexAtomic
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_read_rx_payload
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_flush_tx
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_print
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio-platform.o(i.set_node_data)
</UL>
<P><STRONG><a name="[41]"></a>nrf_esb_update_prefix</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, nrf_esb.o(i.nrf_esb_update_prefix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nrf_esb_update_prefix &rArr; update_radio_addresses &rArr; addr_conv
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_radio_addresses
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESB_Init
</UL>

<P><STRONG><a name="[75]"></a>nrf_esb_write_payload</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, nrf_esb.o(i.nrf_esb_write_payload))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nrf_esb_write_payload &rArr; start_tx_transaction
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_tx_transaction
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_data
</UL>

<P><STRONG><a name="[68]"></a>set_node_data</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, radio-platform.o(i.set_node_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = set_node_data &rArr; ESB_Init &rArr; dbg_print &rArr; RingBufWrite &rArr; RingBufWriteOne &rArr; UpdateIndexAtomic
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_write_payload
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESB_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_nrf_id
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_delay
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>sleep_until_next_interval</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, radio-platform.o(i.sleep_until_next_interval))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>timer_delay</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, main_mesh_v2.o(i.timer_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_data
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[44]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main_mesh_v2.o(i.NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC0_IRQHandler
</UL>

<P><STRONG><a name="[43]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main_mesh_v2.o(i.NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_delay
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC0_IRQHandler
</UL>

<P><STRONG><a name="[45]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main_mesh_v2.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_delay
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC0_IRQHandler
</UL>

<P><STRONG><a name="[47]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main_mesh_v2.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[63]"></a>TIC_TOC_timer_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, main_mesh_v2.o(i.TIC_TOC_timer_set))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>is_disabled_in_debug_needed</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, system_nrf51.o(i.is_disabled_in_debug_needed))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[50]"></a>is_manual_peripheral_setup_needed</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, system_nrf51.o(i.is_manual_peripheral_setup_needed))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[52]"></a>is_peripheral_domain_setup_needed</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, system_nrf51.o(i.is_peripheral_domain_setup_needed))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[4b]"></a>UpdateIndexAtomic</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ringbuf.o(i.UpdateIndexAtomic))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UpdateIndexAtomic
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBufWriteOne
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBufReadOne
</UL>

<P><STRONG><a name="[7b]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nrf_esb.o(i.NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_tx_transaction
</UL>

<P><STRONG><a name="[4e]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nrf_esb.o(i.NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_fifo_remove_last
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_write_payload
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_read_rx_payload
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_flush_tx
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_disable
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[4f]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nrf_esb.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_fifo_remove_last
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_tx_transaction
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_write_payload
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_read_rx_payload
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_flush_tx
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[78]"></a>NVIC_SetPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nrf_esb.o(i.NVIC_SetPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_radio_disabled_tx_wait_for_ack
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_radio_disabled_tx_noack
</UL>

<P><STRONG><a name="[70]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, nrf_esb.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_init
</UL>

<P><STRONG><a name="[5e]"></a>addr_conv</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, nrf_esb.o(i.addr_conv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = addr_conv
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bytewise_bit_swap
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_radio_addresses
</UL>

<P><STRONG><a name="[5f]"></a>bytewise_bit_swap</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, nrf_esb.o(i.bytewise_bit_swap))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_radio_addresses
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addr_conv
</UL>

<P><STRONG><a name="[24]"></a>on_radio_disabled_tx</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, nrf_esb.o(i.on_radio_disabled_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = on_radio_disabled_tx
</UL>
<BR>[Address Reference Count : 2]<UL><LI> nrf_esb.o(i.on_radio_disabled_tx_wait_for_ack)
<LI> nrf_esb.o(i.start_tx_transaction)
</UL>
<P><STRONG><a name="[26]"></a>on_radio_disabled_tx_noack</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, nrf_esb.o(i.on_radio_disabled_tx_noack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = on_radio_disabled_tx_noack &rArr; start_tx_transaction
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_fifo_remove_last
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_tx_transaction
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf_esb.o(i.start_tx_transaction)
</UL>
<P><STRONG><a name="[23]"></a>on_radio_disabled_tx_wait_for_ack</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, nrf_esb.o(i.on_radio_disabled_tx_wait_for_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = on_radio_disabled_tx_wait_for_ack &rArr; start_tx_transaction
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_fifo_remove_last
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_tx_transaction
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_fifo_push_rfbuf
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf_esb.o(i.on_radio_disabled_tx)
</UL>
<P><STRONG><a name="[6b]"></a>reset_fifos</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrf_esb.o(i.reset_fifos))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_disable
</UL>

<P><STRONG><a name="[79]"></a>rx_fifo_push_rfbuf</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, nrf_esb.o(i.rx_fifo_push_rfbuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rx_fifo_push_rfbuf
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_radio_disabled_tx_wait_for_ack
</UL>

<P><STRONG><a name="[76]"></a>start_tx_transaction</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, nrf_esb.o(i.start_tx_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = start_tx_transaction
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_radio_disabled_tx_wait_for_ack
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_radio_disabled_tx_noack
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_write_payload
</UL>

<P><STRONG><a name="[77]"></a>tx_fifo_remove_last</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, nrf_esb.o(i.tx_fifo_remove_last))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tx_fifo_remove_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_radio_disabled_tx_wait_for_ack
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_radio_disabled_tx_noack
</UL>

<P><STRONG><a name="[73]"></a>update_radio_addresses</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, nrf_esb.o(i.update_radio_addresses))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = update_radio_addresses &rArr; addr_conv
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bytewise_bit_swap
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addr_conv
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_update_prefix
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_set_base_address_0
</UL>

<P><STRONG><a name="[6f]"></a>update_radio_parameters</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, nrf_esb.o(i.update_radio_parameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = update_radio_parameters
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_radio_tx_power
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_esb_init
</UL>

<P><STRONG><a name="[7c]"></a>update_radio_tx_power</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_esb.o(i.update_radio_tx_power))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_radio_parameters
</UL>

<P><STRONG><a name="[28]"></a>update_rf_payload_format_esb</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, nrf_esb.o(i.update_rf_payload_format_esb))
<BR>[Address Reference Count : 1]<UL><LI> nrf_esb.o(i.update_radio_parameters)
</UL>
<P><STRONG><a name="[27]"></a>update_rf_payload_format_esb_dpl</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrf_esb.o(i.update_rf_payload_format_esb_dpl))
<BR>[Address Reference Count : 1]<UL><LI> nrf_esb.o(i.update_radio_parameters)
</UL>
<P><STRONG><a name="[59]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[57]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[5c]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5b]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[22]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0sprintf)
<LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
